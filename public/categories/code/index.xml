<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Pixels / Clarity / Changeability</title>
    <link>/categories/code/</link>
    <description>Recent content in code on Pixels / Clarity / Changeability</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Oct 2016 00:00:00 +0000</lastBuildDate><atom:link href="/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>On Lazy Load Overuse and What You Can Do Instead</title>
      <link>/alt-lazy-load/</link>
      <pubDate>Wed, 19 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/alt-lazy-load/</guid>
      <description>Lazy Load is a great idea, so it&amp;rsquo;s overused frequently. Do you remember that situation when you scrolled down quickly to get to the middle part and the picture wasn&amp;rsquo;t there yet?
When using a plugin, you can use a threshold/offset option to fire the thing earlier. But people can scroll fast. If someone visits a site for, let&amp;rsquo;s say, the third time and knows that the part she wants is somewhere close to the bottom, she will scroll down really, really fast.</description>
    </item>
    
    <item>
      <title>Vim Typography: Better Readability and Look</title>
      <link>/vim-typography/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/vim-typography/</guid>
      <description>&lt;p&gt;A few tricks to improve your Vim editor&amp;rsquo;s readability and theming.
All examples are for editing &lt;code&gt;.vimrc&lt;/code&gt; and &lt;code&gt;.gvimrc&lt;/code&gt; files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Maintainable UI: How to Improve Code Editing with SASS</title>
      <link>/maintainable-ui/</link>
      <pubDate>Tue, 10 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>/maintainable-ui/</guid>
      <description>&lt;p&gt;Changes are unavoidable. And you can’t predict the future.
You also can’t solve problems in theory only, without prototyping.
So make your life easier and build things that are easy to edit.
Here are some examples of SASS based solutions that you can use to make UI more maintainable and “themable”.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
